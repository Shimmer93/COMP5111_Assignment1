<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>	$stack3 = virtualinvoke str.<java.lang.String: char[] toCharArray()>()	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>	$stack4 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],char)>($stack3, separator)	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>11")]	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	idx = virtualinvoke str.<java.lang.String: int length()>()	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	if l7 >= l6 goto $stack12 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>(str, separator)	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	if tmp == -1 goto l7 = l7 + 1	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	l6 = lengthof separators	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	l7 = 0	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	l7 = l7 + 1	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	separator2 = separators[l7]	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	tmp = virtualinvoke str.<java.lang.String: int indexOf(int)>(separator2)	0.433013	6
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>	if str != null goto $stack3 = virtualinvoke str.<java.lang.String: char[] toCharArray()>()	0.375000	13
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	$stack12 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>(str, separator)	0.375000	13
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	if str == null goto $stack12 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>(str, separator)	0.375000	13
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	separator = separators[0]	0.375000	13
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	goto [?= i = i + 1]	0.353553	21
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	if trueCount >= 1 goto return 0	0.353553	21
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	trueCount = trueCount + 1	0.353553	21
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	idx = tmp	0.353553	21
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	if tmp >= idx goto l7 = l7 + 1	0.353553	21
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	separator = separator2	0.353553	21
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	$stack13 = lo	0.353553	21
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	$stack14 = mid	0.353553	21
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>9")]	0.353553	21
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	lo = lo + 1	0.353553	21
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	mid = mid + 1	0.353553	21
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>(array, $stack13, $stack14)	0.353553	21
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack10 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.335410	33
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack11 = $stack10 + 1	0.335410	33
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack12 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.335410	33
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack13 = $stack12 + 1	0.335410	33
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>4")]	0.335410	33
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2> = $stack11	0.335410	33
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos> = $stack13	0.335410	33
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	$stack11 = lengthof separators	0.335410	33
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	if $stack11 != 0 goto separator = separators[0]	0.335410	33
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	if from >= to#5 goto return array	0.335410	33
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	return array	0.335410	33
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	to#5 = to + -1	0.335410	33
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack10 = array[j]	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack11 = array[i]	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack12 = $stack11 - $stack10	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack13 = array[j]	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack14 = array[i]	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack15 = $stack14 - $stack13	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack7 = array[j]	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack8 = array[i]	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack9 = $stack8 + $stack7	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	array[i] = $stack15	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	array[i] = $stack9	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	array[j] = $stack12	0.316228	46
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	return array	0.316228	46
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	goto [?= return result]	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	result = 1	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	goto [?= $stack6 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>(0)]	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],char)>	$stack3 = lengthof charArray	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],char)>	$stack4 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>(charArray, 0, $stack3, separator)	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack29 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack30 = charArray[$stack29]	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack36 = length	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if $stack30 != 61 goto $stack14 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>()	0.306186	60
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	if separators == null goto $stack10 = new java.util.HashMap	0.306186	60
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	$stack7 = hi - mid	0.306186	60
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	$stack8 = mid - lo	0.306186	60
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	if $stack8 != $stack7 goto virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>(array, lo, mid)	0.306186	60
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	return array	0.306186	60
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	$stack5 = lengthof array	0.306186	60
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	if to < $stack5 goto to#5 = to + -1	0.306186	60
<comp5111.assignment.cut.Subject$SortTools: void <init>(comp5111.assignment.cut.Subject)>	return	0.303170	70
<comp5111.assignment.cut.Subject$SortTools: void <init>(comp5111.assignment.cut.Subject)>	specialinvoke this.<java.lang.Object: void <init>()>()	0.303170	70
<comp5111.assignment.cut.Subject$SortTools: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$SortTools: comp5111.assignment.cut.Subject this$0> = this$0	0.303170	70
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack6 = lengthof array	0.301511	72
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	if j < $stack6 goto $stack8 = array[i]	0.301511	72
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	$stack4 = lengthof array	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	$stack6 = array[i]	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>4")]	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	i = 0	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	i = i + 1	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	if $stack6 == 0 goto i = i + 1	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	if i >= $stack4 goto (branch)	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	if trueCount <= 0 goto $stack5 = 0	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	return $stack5	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	trueCount = -1	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack24 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack25 = charArray[$stack24]	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack27 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack28 = $stack27 + 1	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if $stack25 != separator goto (branch)	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos> = $stack28	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	$stack13 = len - half	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	from = mid + 1	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	goto [?= (branch)]	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	len = $stack13 - 1	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	if mid >= hi goto return array	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	from = from + 1	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>6")]	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	to#5 = to#5 + -1	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>(array, from, to#5)	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	$stack5 = lengthof array	0.288675	87
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	if i >= $stack5 goto return null	0.288675	87
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>	$stack1 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int len>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>	$stack2 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>	$stack3 = 0	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>	$stack3 = 1	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>	goto [?= return $stack3]	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>	if $stack2 >= $stack1 goto $stack3 = 0	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>	return $stack3	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	element = charray[l6]	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>3")]	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	if ch != element goto l6 = l6 + 1	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	if l6 >= l5 goto return result	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	l5 = lengthof charray	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	l6 = 0	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	l6 = l6 + 1	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	result = 0	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>	return result	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack10 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack11 = $stack10 - 1	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack12 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack13 = this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack3 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack32 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack33 = $stack32 - 1	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack34 = this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack35 = $stack34[$stack33]	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack36 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($stack35)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack4 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack42 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack43 = this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack44 = $stack43[$stack42]	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack45 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($stack44)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack5 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack6 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack7 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack8 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack9 = new java.lang.String	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if $stack36 == 0 goto (branch)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if $stack4 >= $stack3 goto $stack6 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if $stack45 == 0 goto $stack6 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if $stack6 <= $stack5 goto (branch)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if $stack8 <= $stack7 goto return result	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if quoted == 0 goto result = null	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	result = $stack9	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	result = null	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	return result	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	specialinvoke $stack9.<java.lang.String: void <init>(char[],int,int)>($stack13, $stack12, $stack11)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack3 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack4 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack5 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>()	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack6 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>(0)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack7 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack8 = this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	$stack9 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>(ch, terminators)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	ch = $stack8[$stack7]	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	if $stack5 == 0 goto $stack6 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>(0)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	if $stack9 == 0 goto $stack10 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	return $stack6	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1> = $stack3	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2> = $stack4	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],char)>	if charArray != null goto $stack3 = lengthof charArray	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack10 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>()	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack11 = newarray (char)[2]	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack11[0] = 61	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack11[1] = separator	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack13 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>()	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack8 = new java.util.HashMap	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack9 = lengthof charArray	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if $stack10 == 0 goto return $stack8	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if $stack13 == 0 goto $stack14 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>()	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if length <= $stack9 goto $stack36 = length	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	paramName = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseToken(char[])>($stack11)	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	paramValue = null	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	specialinvoke $stack8.<java.util.HashMap: void <init>()>()	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars> = charArray	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int len> = $stack36	0.283473	140
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos> = offset	0.283473	140
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	$stack6 = lengthof array	0.283473	140
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	if hi < $stack6 goto $stack8 = mid - lo	0.283473	140
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	if from > to goto return null	0.283473	140
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	if j < 0 goto return null	0.277350	180
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	if i < 0 goto return null	0.267261	181
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if charArray != null goto $stack8 = new java.util.HashMap	0.265165	183
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	if mid > hi goto return null	0.265165	183
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	if 0 > from goto return null	0.265165	183
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	$stack5 = 1	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	goto [?= return $stack5]	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	if array != null goto trueCount = -1	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack38 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack39 = $stack38 - 1	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>12")]	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2> = $stack39	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack16 = virtualinvoke paramName.<java.lang.String: int length()>()	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack17 = this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean lowerCaseNames>	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>14")]	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if $stack16 <= 0 goto staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>14")	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if $stack17 == 0 goto virtualinvoke $stack8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(paramName, paramValue)	0.250000	206
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	virtualinvoke $stack8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(paramName, paramValue)	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack6 = lengthof array	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	if i >= $stack6 goto $stack4 = new java.lang.IllegalArgumentException	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>9")]	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	if $stack11 >= 0 goto len = half	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	return from	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	$stack11 = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>(array, val, mid)	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	half = len >>> 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	if len <= 0 goto return from	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	len = to - from	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	mid = from + half	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	if lo > mid goto return null	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack10 = off + len	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack14 = j - 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack15 = array[j]	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack16 = array[$stack14]	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack17 = j - 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack18 = array[j]	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack19 = j - 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	array[$stack19] = $stack18	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	array[j] = tmp	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>11")]	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>8")]	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	i = i + 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	i = off + 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	if $stack16 <= $stack15 goto i = i + 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	if i >= $stack10 goto return array	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	if j <= off goto i = i + 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	j = i - 1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	j = j + -1	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	return array	0.250000	206
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	tmp = array[$stack17]	0.250000	206
<comp5111.assignment.cut.Subject: void <init>()>	return	0.242983	229
<comp5111.assignment.cut.Subject: void <init>()>	specialinvoke this.<java.lang.Object: void <init>()>()	0.242983	229
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	if j < 0 goto $stack4 = new java.lang.IllegalArgumentException	0.242536	231
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	if 0 > lo goto return null	0.237171	232
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	if i < 0 goto $stack4 = new java.lang.IllegalArgumentException	0.235702	233
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	if array == null goto $stack4 = new java.lang.IllegalArgumentException	0.229416	234
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack12 = 1	0.223607	238
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	$stack11 = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>(array, mid, val)	0.223607	238
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	half = len >>> 1	0.223607	238
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	if len <= 0 goto return from	0.223607	238
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	len = to - from	0.223607	238
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	mid = from + half	0.223607	238
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	$stack10 = lengthof array	0.223607	238
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	if to < $stack10 goto len = to - from	0.223607	238
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack8 = array[j]	0.208013	244
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack9 = array[i]	0.208013	244
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	if $stack9 >= $stack8 goto $stack11 = array[i]	0.208013	244
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	return $stack12	0.208013	244
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack14 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>()	0.204124	250
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if $stack14 == 0 goto (branch)	0.204124	250
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	if paramName == null goto staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>14")	0.204124	250
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	$stack10 = lengthof array	0.204124	250
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	if to < $stack10 goto len = to - from	0.204124	250
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	$stack9 = lengthof array	0.204124	250
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	if from >= $stack9 goto return -10086	0.204124	250
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack7 = lengthof array	0.200446	254
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	if j < $stack7 goto $stack9 = array[i]	0.200446	254
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	$stack9 = lengthof array	0.188982	257
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	if from >= $stack9 goto return -10086	0.188982	257
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	if to < 0 goto return -10086	0.188982	257
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	$stack5 = 0	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	if to < 0 goto return -10086	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	len = half	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	$stack12 = len - half	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	from = mid + 1	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	if from < 0 goto return -10086	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	len = $stack12 - 1	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack8 = lengthof array	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	$stack9 = off + len	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	if $stack9 < $stack8 goto i = off + 1	0.176777	265
<comp5111.assignment.cut.Subject$TextHandler: char[] newTextBuffer(int)>	$stack2 = newarray (char)[bufferSize]	0.176777	265
<comp5111.assignment.cut.Subject$TextHandler: char[] newTextBuffer(int)>	if bufferSize >= 1 goto $stack2 = newarray (char)[bufferSize]	0.176777	265
<comp5111.assignment.cut.Subject$TextHandler: char[] newTextBuffer(int)>	return $stack2	0.176777	265
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack10 = array[j]	0.166667	275
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack11 = array[i]	0.166667	275
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack12 = -1	0.166667	275
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	goto [?= return $stack12]	0.166667	275
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	if $stack11 != $stack10 goto $stack12 = 1	0.166667	275
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	if from < 0 goto return -10086	0.166667	275
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	if array == null goto return -10086	0.166667	275
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	if array == null goto return -10086	0.158114	279
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	return	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	specialinvoke this.<java.lang.Object: void <init>()>()	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean lowerCaseNames> = 0	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars> = null	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: comp5111.assignment.cut.Subject this$0> = this$0	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1> = 0	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2> = 0	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int len> = 0	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos> = 0	0.155043	284
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack21 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack22 = this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars>	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack23 = $stack22[$stack21]	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if $stack23 != 34 goto result = null	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack11 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack12 = $stack11 + 1	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack13 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack14 = $stack13 + 1	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack16 = 0	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	charEscaped = $stack16	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>6")]	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	if ch != 34 goto (branch)	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	if ch != 92 goto $stack16 = 0	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	if charEscaped != 0 goto $stack16 = 0	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	if charEscaped != 0 goto (branch)	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2> = $stack12	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos> = $stack14	0.144338	300
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>9")]	0.144338	300
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	if $stack11 >= 0 goto from = mid + 1	0.144338	300
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	return from	0.144338	300
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>(array, lo, hi)	0.144338	300
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>(array, lo, mid)	0.144338	300
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>(array, mid, hi)	0.144338	300
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	if len < 0 goto return null	0.144338	300
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack15 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack16 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack17 = $stack16 - $stack15	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if $stack17 < 2 goto result = null	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack10 = this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars>	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack23 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean isOneOf(char,char[])>(ch, terminators)	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack5 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack6 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack7 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasChar()>()	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack8 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>(1)	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack9 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	ch = $stack10[$stack9]	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	charEscaped = 0	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	if $stack23 == 0 goto (branch)	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	if $stack7 == 0 goto $stack8 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>(1)	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	if quoted != 0 goto (branch)	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	quoted = 0	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1> = $stack5	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2> = $stack6	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack32 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos>	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack33 = $stack32 + 1	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack34 = newarray (char)[1]	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack34[0] = separator	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	paramValue = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>($stack34)	0.125000	325
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int pos> = $stack33	0.125000	325
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	if off < 0 goto return null	0.125000	325
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	if array == null goto return null	0.111803	339
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack12 = 0	0.102062	342
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	$stack4 = new java.lang.IllegalArgumentException	0.102062	342
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	goto [?= return $stack12]	0.102062	342
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	specialinvoke $stack4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Wrong index.")	0.102062	342
<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>	throw $stack4	0.102062	342
<comp5111.assignment.cut.Subject$TextHandler: void <init>(comp5111.assignment.cut.Subject)>	return	0.044901	346
<comp5111.assignment.cut.Subject$TextHandler: void <init>(comp5111.assignment.cut.Subject)>	specialinvoke this.<java.lang.Object: void <init>()>()	0.044901	346
<comp5111.assignment.cut.Subject$TextHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$TextHandler: comp5111.assignment.cut.Subject this$0> = this$0	0.044901	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	$stack3 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	$stack4 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	$stack5 = virtualinvoke str.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	$stack6 = staticinvoke <java.lang.Character: boolean isDigit(char)>($stack5)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>5")]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	if $stack3 != 0 goto i = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	if $stack6 != 0 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	if i >= $stack4 goto return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	if str == null goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack10 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack12 = chars[0]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack13 = $stack77 + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack14 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack15 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack16 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack19 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack20 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack21 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack25 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack29 = sz + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack30 = lengthof chars	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack31 = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack31 = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack32 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack33 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack34 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack35 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack36 = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack36 = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack37 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack39 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack40 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack42 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack43 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack48 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack57 = chars[$stack77]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack59 = $stack77 + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack60 = chars[$stack59]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack61 = lengthof chars	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack62 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack63 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack64 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack65 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack69 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack73 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack77 = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	$stack77 = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	allowSigns = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	allowSigns = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	allowSigns = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	allowSigns = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	chars = virtualinvoke str.<java.lang.String: char[] toCharArray()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	foundDigit = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	foundDigit = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	foundDigit = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= return $stack31]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= return $stack36]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= start = $stack77]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>26")]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>46")]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	hasDecPoint = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	hasDecPoint = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	hasExp = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	hasExp = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	i = $stack77 + 2	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	i = start	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack10 != 0 goto chars = virtualinvoke str.<java.lang.String: char[] toCharArray()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack12 != 45 goto $stack77 = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack14 < 48 goto $stack15 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack15 != 46 goto $stack16 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack16 == 101 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack19 != 69 goto $stack20 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack20 == 43 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack21 != 45 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack25 > 57 goto $stack15 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack32 < 48 goto $stack33 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack33 == 101 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack34 != 69 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack35 == 108 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack37 != 76 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack39 == 100 goto return foundDigit	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack40 == 68 goto return foundDigit	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack42 == 102 goto return foundDigit	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack43 != 70 goto $stack35 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack48 > 57 goto $stack33 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack57 != 48 goto sz = sz + -1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack60 != 120 goto sz = sz + -1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack62 < 48 goto $stack63 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack63 < 97 goto $stack64 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack64 < 65 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack65 <= 70 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack69 <= 102 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if $stack73 <= 57 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if allowSigns != 0 goto $stack31 = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if allowSigns != 0 goto $stack35 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if allowSigns != 0 goto allowSigns = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if allowSigns == 0 goto $stack30 = lengthof chars	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if foundDigit != 0 goto $stack30 = lengthof chars	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if foundDigit != 0 goto hasExp = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if foundDigit == 0 goto $stack31 = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if foundDigit == 0 goto $stack36 = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if hasDecPoint != 0 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if hasExp != 0 goto $stack36 = 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if hasExp == 0 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if hasExp == 0 goto hasDecPoint = 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if i != sz goto $stack61 = lengthof chars	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if i < sz goto $stack14 = chars[i]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if i >= $stack29 goto $stack30 = lengthof chars	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if i >= $stack30 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if i >= $stack61 goto return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if str == null goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	if sz <= $stack13 goto sz = sz + -1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return $stack31	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return $stack36	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	return foundDigit	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	start = $stack77	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	sz = lengthof chars	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: boolean isNumber(java.lang.String)>	sz = sz + -1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	$stack10 = lhs cmpl rhs	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	$stack13 = lhsBits cmp rhsBits	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	$stack14 = lhsBits cmp rhsBits	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	$stack9 = lhs cmpg rhs	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	if $stack10 <= 0 goto lhsBits = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(lhs)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	if $stack13 != 0 goto $stack14 = lhsBits cmp rhsBits	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	if $stack14 >= 0 goto return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	if $stack9 >= 0 goto $stack10 = lhs cmpl rhs	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	lhsBits = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(lhs)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	return -1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	return -1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(double,double)>	rhsBits = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(rhs)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	$stack5 = lhs cmpg rhs	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	$stack6 = lhs cmpl rhs	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	if $stack5 >= 0 goto $stack6 = lhs cmpl rhs	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	if $stack6 <= 0 goto lhsBits = staticinvoke <java.lang.Float: int floatToIntBits(float)>(lhs)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	if lhsBits != rhsBits goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	if lhsBits >= rhsBits goto return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	lhsBits = staticinvoke <java.lang.Float: int floatToIntBits(float)>(lhs)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	return -1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	return -1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int compare(float,float)>	rhsBits = staticinvoke <java.lang.Float: int floatToIntBits(float)>(rhs)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int maximum(int,int,int)>	a = b	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int maximum(int,int,int)>	a = c	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int maximum(int,int,int)>	if b <= a goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int maximum(int,int,int)>	if c <= a goto return a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int maximum(int,int,int)>	return a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int minimum(int,int,int)>	a = b	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int minimum(int,int,int)>	a = c	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int minimum(int,int,int)>	if b >= a goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int minimum(int,int,int)>	if c >= a goto return a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: int minimum(int,int,int)>	return a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack10 = virtualinvoke val.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack101 = expPos + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack102 = virtualinvoke val.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack103 = $stack102 - 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack108 = decPos + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack111 = decPos + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack116 = new java.lang.NumberFormatException	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack117 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(val) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid number.")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack119 = virtualinvoke val.<java.lang.String: char charAt(int)>(0)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack12 = virtualinvoke val.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack120 = staticinvoke <java.lang.Character: boolean isDigit(char)>($stack119)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack13 = virtualinvoke val.<java.lang.String: boolean startsWith(java.lang.String)>("--")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack14 = virtualinvoke val.<java.lang.String: boolean startsWith(java.lang.String)>("0x")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack15 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(val)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack16 = virtualinvoke val.<java.lang.String: boolean startsWith(java.lang.String)>("-0x")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack17 = virtualinvoke val.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack18 = $stack17 - 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack21 = virtualinvoke val.<java.lang.String: int indexOf(int)>(101)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack22 = virtualinvoke val.<java.lang.String: int indexOf(int)>(69)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack23 = $stack21 + $stack22	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack24 = staticinvoke <java.lang.Character: boolean isDigit(char)>(lastChar)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack25 = new java.math.BigDecimal	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack26 = virtualinvoke $stack25.<java.math.BigDecimal: float floatValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack27 = (double) $stack26	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack28 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($stack27)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack29 = virtualinvoke $stack25.<java.math.BigDecimal: double doubleValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack30 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($stack29)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack31 = virtualinvoke $stack25.<java.math.BigDecimal: double doubleValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack31)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack33 = virtualinvoke $stack25.<java.math.BigDecimal: float floatValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack34 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($stack33)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack38 = new java.math.BigInteger	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack39 = virtualinvoke $stack38.<java.math.BigInteger: int intValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack40 = (long) $stack39	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack41 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($stack40)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack42 = virtualinvoke $stack38.<java.math.BigInteger: long longValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack43 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($stack42)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack44 = virtualinvoke $stack38.<java.math.BigInteger: long longValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack44)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack46 = virtualinvoke $stack38.<java.math.BigInteger: int intValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack46)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack48 = virtualinvoke val.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack49 = $stack48 - 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack52 = expPos + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack55 = virtualinvoke val.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack56 = $stack55 - 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack58 = new java.lang.NumberFormatException	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack59 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(val) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid number.")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack61 = virtualinvoke numeric.<java.lang.String: char charAt(int)>(0)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack62 = virtualinvoke this.<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>(numeric)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack63 = new java.math.BigInteger	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack64 = virtualinvoke $stack63.<java.math.BigInteger: int intValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack65 = (long) $stack64	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack66 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($stack65)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack67 = virtualinvoke $stack63.<java.math.BigInteger: long longValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack68 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($stack67)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack69 = virtualinvoke $stack63.<java.math.BigInteger: long longValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack70 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack69)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack71 = virtualinvoke $stack63.<java.math.BigInteger: int intValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack71)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack73 = virtualinvoke numeric.<java.lang.String: java.lang.String substring(int)>(1)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack74 = virtualinvoke this.<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>($stack73)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack80 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(numeric)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack81 = new java.math.BigDecimal	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack82 = virtualinvoke $stack81.<java.math.BigDecimal: double doubleValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack83 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>($stack82)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack84 = virtualinvoke $stack81.<java.math.BigDecimal: double doubleValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack85 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack84)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack86 = new java.lang.NumberFormatException	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack87 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(val) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a number.")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack93 = virtualinvoke val.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	$stack94 = $stack93 - 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	dec = null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	dec = virtualinvoke val.<java.lang.String: java.lang.String substring(int)>($stack108)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	dec = virtualinvoke val.<java.lang.String: java.lang.String substring(int,int)>($stack111, expPos)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	decPos = virtualinvoke val.<java.lang.String: int indexOf(int)>(46)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	exp = null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	exp = null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	exp = virtualinvoke val.<java.lang.String: java.lang.String substring(int)>($stack52)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	exp = virtualinvoke val.<java.lang.String: java.lang.String substring(int,int)>($stack101, $stack103)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	expPos = $stack23 + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	goto [?= $stack24 = staticinvoke <java.lang.Character: boolean isDigit(char)>(lastChar)]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	goto [?= $stack55 = virtualinvoke val.<java.lang.String: int length()>()]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	goto [?= (branch)]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	goto [?= dec = null]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	goto [?= virtualinvoke val.<java.lang.String: java.lang.String substring(int,int)>(0, decPos)]	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack10 == 0 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack12 != 1 goto $stack13 = virtualinvoke val.<java.lang.String: boolean startsWith(java.lang.String)>("--")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack120 != 0 goto $stack13 = virtualinvoke val.<java.lang.String: boolean startsWith(java.lang.String)>("--")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack13 == 0 goto $stack14 = virtualinvoke val.<java.lang.String: boolean startsWith(java.lang.String)>("0x")	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack14 != 0 goto $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(val)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack16 == 0 goto $stack17 = virtualinvoke val.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack24 != 0 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack25 != $stack28 goto $stack29 = virtualinvoke $stack25.<java.math.BigDecimal: double doubleValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack25 != $stack30 goto return $stack25	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack38 != $stack41 goto $stack42 = virtualinvoke $stack38.<java.math.BigInteger: long longValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack38 != $stack43 goto return $stack38	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack61 != 45 goto $stack62 = virtualinvoke this.<comp5111.assignment.cut.Subject$NumberHandler: boolean isDigits(java.lang.String)>(numeric)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack62 == 0 goto $stack58 = new java.lang.NumberFormatException	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack63 != $stack66 goto $stack67 = virtualinvoke $stack63.<java.math.BigInteger: long longValue()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack63 != $stack68 goto return $stack63	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack74 != 0 goto $stack63 = new java.math.BigInteger	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if $stack81 != $stack83 goto return $stack81	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if dec != null goto $stack25 = new java.math.BigDecimal	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if dec != null goto $stack58 = new java.lang.NumberFormatException	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if decPos <= -1 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if exp != null goto $stack25 = new java.math.BigDecimal	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if exp != null goto $stack58 = new java.lang.NumberFormatException	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if expPos <= -1 goto $stack108 = decPos + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if expPos <= -1 goto dec = null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if expPos <= -1 goto exp = null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if expPos <= -1 goto exp = null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if expPos >= $stack49 goto exp = null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if expPos >= $stack94 goto exp = null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if expPos >= decPos goto $stack111 = decPos + 1	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if lastChar != 68 goto $stack86 = new java.lang.NumberFormatException	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if lastChar != 70 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if lastChar != 76 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if lastChar == 100 goto $stack81 = new java.math.BigDecimal	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if lastChar == 102 goto $stack80 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(numeric)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if lastChar == 108 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	if val == null goto return null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	lastChar = virtualinvoke val.<java.lang.String: char charAt(int)>($stack18)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	numeric = virtualinvoke val.<java.lang.String: java.lang.String substring(int,int)>(0, $stack56)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack15	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack25	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack32	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack34	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack38	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack45	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack47	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack63	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack70	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack72	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack80	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack81	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return $stack85	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	specialinvoke $stack116.<java.lang.NumberFormatException: void <init>(java.lang.String)>($stack117)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	specialinvoke $stack25.<java.math.BigDecimal: void <init>(java.lang.String)>(val)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	specialinvoke $stack38.<java.math.BigInteger: void <init>(java.lang.String)>(val)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	specialinvoke $stack58.<java.lang.NumberFormatException: void <init>(java.lang.String)>($stack59)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	specialinvoke $stack63.<java.math.BigInteger: void <init>(java.lang.String)>(numeric)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	specialinvoke $stack81.<java.math.BigDecimal: void <init>(java.lang.String)>(numeric)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	specialinvoke $stack86.<java.lang.NumberFormatException: void <init>(java.lang.String)>($stack87)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	throw $stack116	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	throw $stack58	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	throw $stack86	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	virtualinvoke val.<java.lang.String: java.lang.String substring(int,int)>(0, decPos)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: java.lang.Number parseNumber(java.lang.String)>	virtualinvoke val.<java.lang.String: java.lang.String substring(int,int)>(0, expPos)	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long maximum(long,long,long)>	$stack7 = b cmp a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long maximum(long,long,long)>	$stack8 = c cmp a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long maximum(long,long,long)>	a = b	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long maximum(long,long,long)>	a = c	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long maximum(long,long,long)>	if $stack7 <= 0 goto $stack8 = c cmp a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long maximum(long,long,long)>	if $stack8 <= 0 goto return a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long maximum(long,long,long)>	return a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long minimum(long,long,long)>	$stack7 = b cmp a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long minimum(long,long,long)>	$stack8 = c cmp a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long minimum(long,long,long)>	a = b	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long minimum(long,long,long)>	a = c	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long minimum(long,long,long)>	if $stack7 >= 0 goto $stack8 = c cmp a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long minimum(long,long,long)>	if $stack8 >= 0 goto return a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: long minimum(long,long,long)>	return a	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: void <init>(comp5111.assignment.cut.Subject)>	return	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: void <init>(comp5111.assignment.cut.Subject)>	specialinvoke this.<java.lang.Object: void <init>()>()	0.000000	819
<comp5111.assignment.cut.Subject$NumberHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$NumberHandler: comp5111.assignment.cut.Subject this$0> = this$0	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: boolean hasOneTrue(boolean[])>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	$stack5 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	$stack6 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	$stack7 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	if value != falseValue goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	if value != nullValue goto $stack5 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	if value != trueValue goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	return $stack6	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	return $stack7	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No match.")	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(int,int,int,int)>	throw $stack5	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	$stack10 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	$stack12 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	$stack13 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	$stack5 = virtualinvoke value.<java.lang.Integer: boolean equals(java.lang.Object)>(trueValue)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	$stack6 = virtualinvoke value.<java.lang.Integer: boolean equals(java.lang.Object)>(falseValue)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	$stack7 = virtualinvoke value.<java.lang.Integer: boolean equals(java.lang.Object)>(nullValue)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	$stack8 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	$stack9 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	if $stack5 == 0 goto $stack6 = virtualinvoke value.<java.lang.Integer: boolean equals(java.lang.Object)>(falseValue)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	if $stack6 == 0 goto $stack7 = virtualinvoke value.<java.lang.Integer: boolean equals(java.lang.Object)>(nullValue)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	if $stack7 == 0 goto $stack8 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	if falseValue != null goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	if nullValue != null goto $stack8 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	if trueValue != null goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	if value != null goto $stack5 = virtualinvoke value.<java.lang.Integer: boolean equals(java.lang.Object)>(trueValue)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	return $stack10	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	return $stack12	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	return $stack13	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	return $stack9	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	specialinvoke $stack8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No match.")	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>	throw $stack8	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack10 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack11 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack12 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack13 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack19 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack33 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack43 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack44 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack57 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack58 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack66 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack67 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack68 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack7 = "true"	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(str)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	$stack9 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch0 = virtualinvoke str.<java.lang.String: char charAt(int)>(0)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch0 = virtualinvoke str.<java.lang.String: char charAt(int)>(0)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch0 = virtualinvoke str.<java.lang.String: char charAt(int)>(0)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch0 = virtualinvoke str.<java.lang.String: char charAt(int)>(0)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch0 = virtualinvoke str.<java.lang.String: char charAt(int)>(0)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch1 = virtualinvoke str.<java.lang.String: char charAt(int)>(1)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch1 = virtualinvoke str.<java.lang.String: char charAt(int)>(1)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch1 = virtualinvoke str.<java.lang.String: char charAt(int)>(1)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch1 = virtualinvoke str.<java.lang.String: char charAt(int)>(1)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch2 = virtualinvoke str.<java.lang.String: char charAt(int)>(2)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch2 = virtualinvoke str.<java.lang.String: char charAt(int)>(2)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch2 = virtualinvoke str.<java.lang.String: char charAt(int)>(2)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch3 = virtualinvoke str.<java.lang.String: char charAt(int)>(3)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch3 = virtualinvoke str.<java.lang.String: char charAt(int)>(3)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	ch4 = virtualinvoke str.<java.lang.String: char charAt(int)>(4)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	goto [?= return null]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	goto [?= return null]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	goto [?= return null]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	goto [?= return null]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if $stack10 != 2 goto $stack11 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if $stack11 != 3 goto $stack12 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if $stack12 != 4 goto $stack13 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if $stack13 != 5 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if $stack8 == 0 goto $stack9 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if $stack9 != 1 goto $stack10 = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 != 70 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 != 70 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 != 78 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 != 79 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 != 79 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 != 84 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 != 84 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 != 89 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 102 goto $stack67 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 102 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 110 goto $stack67 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 110 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 111 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 111 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 116 goto $stack66 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 116 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 121 goto $stack66 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 121 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 78 goto $stack67 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch0 == 89 goto $stack66 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 != 65 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 != 69 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 != 70 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 != 78 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 != 79 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 != 82 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 == 101 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 == 102 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 == 110 goto $stack57 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 == 111 goto $stack58 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 == 114 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch1 == 97 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch2 != 70 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch2 != 76 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch2 != 83 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch2 != 85 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch2 == 102 goto $stack44 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch2 == 108 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch2 == 115 goto $stack43 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch2 == 117 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch3 != 69 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch3 != 83 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch3 == 101 goto $stack33 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch3 == 115 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch4 != 69 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if ch4 == 101 goto $stack19 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	if str != null goto $stack7 = "true"	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack19	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack33	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack43	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack44	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack57	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack58	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack66	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack67	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return $stack68	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	$stack10 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	$stack12 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	$stack13 = <java.lang.Boolean: java.lang.Boolean TRUE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	$stack5 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>(trueString)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	$stack6 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>(falseString)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	$stack7 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>(nullString)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	$stack8 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	$stack9 = <java.lang.Boolean: java.lang.Boolean FALSE>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	if $stack5 == 0 goto $stack6 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>(falseString)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	if $stack6 == 0 goto $stack7 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>(nullString)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	if $stack7 == 0 goto $stack8 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	if falseString != null goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	if nullString != null goto $stack8 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	if str != null goto $stack5 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>(trueString)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	if trueString != null goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	return $stack10	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	return $stack12	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	return $stack13	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	return $stack9	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	specialinvoke $stack8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No match.")	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	throw $stack8	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack24 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack25 = $stack24 - 1	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack26 = this.<comp5111.assignment.cut.Subject$ParameterHandler: char[] chars>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack27 = $stack26[$stack25]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack28 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack29 = $stack28 + 1	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack30 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack31 = $stack30 - 1	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack46 = this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	$stack47 = $stack46 + 1	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>0")]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	if $stack27 != 34 goto result = null	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1> = $stack29	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i1> = $stack47	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>	this.<comp5111.assignment.cut.Subject$ParameterHandler: int i2> = $stack31	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack16 = 1	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack22 = 0	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	$stack22 = 1	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	goto [?= $stack8 = virtualinvoke this.<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String getToken(boolean)>(1)]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	goto [?= charEscaped = $stack16]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	goto [?= quoted = $stack22]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	if quoted != 0 goto $stack22 = 0	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	quoted = $stack22	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.lang.String parseQuotedToken(char[])>	return $stack8	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],char)>	$stack5 = new java.util.HashMap	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],char)>	return $stack4	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],char)>	return $stack5	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],char)>	specialinvoke $stack5.<java.util.HashMap: void <init>()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack19 = <java.util.Locale: java.util.Locale ENGLISH>	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack36 = lengthof charArray	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	$stack40 = new java.util.HashMap	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	goto [?= this.<comp5111.assignment.cut.Subject$ParameterHandler: int len> = $stack36]	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	paramName = virtualinvoke paramName.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($stack19)	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	return $stack40	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	return $stack8	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(char[],int,int,char)>	specialinvoke $stack40.<java.util.HashMap: void <init>()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>	$stack5 = new java.util.HashMap	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>	return $stack4	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>	return $stack5	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char)>	specialinvoke $stack5.<java.util.HashMap: void <init>()>()	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	$stack10 = new java.util.HashMap	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	return $stack10	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	return $stack12	0.000000	819
<comp5111.assignment.cut.Subject$ParameterHandler: java.util.Map parse(java.lang.String,char[])>	specialinvoke $stack10.<java.util.HashMap: void <init>()>()	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: boolean checkRange(int,int)>	$stack3 = 0	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: boolean checkRange(int,int)>	$stack3 = 1	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: boolean checkRange(int,int)>	goto [?= return $stack3]	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: boolean checkRange(int,int)>	if to >= from goto $stack3 = 0	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: boolean checkRange(int,int)>	return $stack3	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int lower(int[],int,int,int)>	return -10086	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>	$stack3 = i - from	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>	$stack4 = $stack3 << 1	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>	$stack5 = $stack4 + 1	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>	$stack6 = $stack5 + from	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>	return $stack6	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	goto [?= (branch)]	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	len = half	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int upper(int[],int,int,int)>	return -10086	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] insertionSort(int[],int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] reverse(int[],int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	$stack6 = lengthof array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	if 0 > lo goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	if hi < $stack6 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	if lo == mid goto return array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	if lo > mid goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	if mid != hi goto virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>(array, lo, mid, hi)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	if mid > hi goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	return array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	return array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] rotate(int[],int,int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] doRotate(int[],int,int,int)>(array, lo, mid, hi)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	$stack10 = lengthof array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	$stack12 = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>(array, i, leftChild)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	$stack14 = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>(array, i, rightChild)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	$stack23 = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int compare(int[],int,int)>(array, leftChild, rightChild)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	$stack8 = lengthof array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	$stack9 = lengthof array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	goto [?= leftChild = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>(from, i)]	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	goto [?= leftChild = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>(from, i)]	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>12")]	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	i = leftChild	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	i = rightChild	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	i = rightChild	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if $stack12 >= 0 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if $stack14 >= 0 goto return array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if $stack23 >= 0 goto virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>(array, i, leftChild)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if array == null goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if from < 0 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if from >= $stack9 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if i < 0 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if i >= $stack8 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if leftChild >= to goto return array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if rightChild >= to goto return array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if rightChild >= to goto virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>(array, i, leftChild)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if to < $stack10 goto leftChild = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>(from, i)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	if to < 0 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	leftChild = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>(from, i)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	leftChild = virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int nextNode(int,int)>(from, i)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	return array	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	rightChild = leftChild + 1	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>(array, i, leftChild)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>(array, i, rightChild)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] siftDown(int[],int,int,int)>	virtualinvoke this.<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>(array, i, rightChild)	0.000000	819
<comp5111.assignment.cut.Subject$SortTools: int[] swap(int[],int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	$stack2 = virtualinvoke exp.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	$stack3 = virtualinvoke this.<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>(exp)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	$stack4 = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	$stack4 = 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	goto [?= return $stack4]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	if $stack2 == 0 goto $stack3 = virtualinvoke this.<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>(exp)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	if $stack3 == null goto $stack4 = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	if exp == null goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	return $stack4	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean hasNested(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	$stack4 = virtualinvoke exp.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	$stack5 = virtualinvoke exp.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	c = virtualinvoke exp.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>5")]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	if $stack4 == 0 goto i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	if c != 40 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	if c != 91 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	if c == 46 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	if exp == null goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	if i >= $stack5 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isIndexed(java.lang.String)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	$stack4 = virtualinvoke exp.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	$stack5 = virtualinvoke exp.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	c = virtualinvoke exp.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>5")]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	if $stack4 == 0 goto i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	if c != 40 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	if c != 91 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	if c == 46 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	if exp == null goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	if i >= $stack5 goto return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	return 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: boolean isMapped(java.lang.String)>	return 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack13 = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack15 = virtualinvoke value.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("-?\\d+(\\.\\d+)?")	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack17 = virtualinvoke $stack16.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(value)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack18 = virtualinvoke $stack17.<java.util.regex.Matcher: boolean matches()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack20 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack21 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack7 = virtualinvoke exp.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	$stack8 = virtualinvoke exp.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	c = virtualinvoke exp.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	end = virtualinvoke exp.<java.lang.String: int indexOf(int,int)>(93, i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	goto [?= return index#3]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>5")]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if $stack15 == 0 goto $stack16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("-?\\d+(\\.\\d+)?")	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if $stack18 == 0 goto return -10086	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if $stack7 == 0 goto i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if c != 40 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if c != 91 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if c == 46 goto return -1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if end >= 0 goto $stack13 = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if exp == null goto return -1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	if i >= $stack8 goto return -10086	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	index#3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(value, 10)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	return -1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	return -1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	return -10086	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	return -10086	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	return index#3	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	specialinvoke $stack20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No Index Value")	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	specialinvoke $stack21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing End Delimiter")	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	throw $stack20	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	throw $stack21	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: int getIndex(java.lang.String)>	value = virtualinvoke exp.<java.lang.String: java.lang.String substring(int,int)>($stack13, end)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	$stack11 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int,int)>(0, i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	$stack12 = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	$stack13 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int,int)>(0, $stack12)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	$stack14 = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	$stack15 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int,int)>(0, $stack14)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	$stack6 = virtualinvoke exp.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	$stack7 = virtualinvoke exp.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	c = virtualinvoke exp.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>7")]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if $stack6 == 0 goto indexed = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if c != 40 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if c != 41 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if c != 46 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if c != 91 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if c != 93 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if exp == null goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if i >= $stack7 goto return exp	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if indexed == 0 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	if mapped == 0 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	indexed = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	indexed = 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	mapped = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	mapped = 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	return $stack11	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	return $stack13	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	return $stack15	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	return exp	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	$stack11 = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	$stack12 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int,int)>($stack11, end)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	$stack13 = new java.lang.IllegalArgumentException	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	$stack5 = virtualinvoke exp.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	$stack6 = virtualinvoke exp.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	c = virtualinvoke exp.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	end = virtualinvoke exp.<java.lang.String: int indexOf(int,int)>(41, i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>5")]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	if $stack5 == 0 goto i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	if c != 40 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	if c != 91 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	if c == 46 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	if end >= 0 goto $stack11 = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	if exp == null goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	if i >= $stack6 goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	return $stack12	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	specialinvoke $stack13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing End Delimiter")	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getKey(java.lang.String)>	throw $stack13	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	$stack4 = virtualinvoke exp.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	$stack5 = virtualinvoke exp.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	$stack7 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int,int)>(0, i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	c = virtualinvoke exp.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>5")]	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	if $stack4 == 0 goto i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	if c != 91 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	if c == 40 goto $stack7 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int,int)>(0, i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	if c == 46 goto $stack7 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int,int)>(0, i)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	if exp == null goto return exp	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	if i >= $stack5 goto return exp	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	return $stack7	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	return exp	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String getProperty(java.lang.String)>	return exp	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	$stack10 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int)>(start)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	$stack4 = virtualinvoke exp.<java.lang.String: boolean isEmpty()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	$stack6 = virtualinvoke exp.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	$stack7 = virtualinvoke property.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	$stack9 = virtualinvoke exp.<java.lang.String: char charAt(int)>(start)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	if $stack4 == 0 goto property = virtualinvoke this.<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>(exp)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	if $stack6 != $stack7 goto start = virtualinvoke property.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	if $stack9 != 46 goto $stack10 = virtualinvoke exp.<java.lang.String: java.lang.String substring(int)>(start)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	if exp == null goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	property = virtualinvoke this.<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String findNext(java.lang.String)>(exp)	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	return $stack10	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	start = start + 1	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: java.lang.String remove(java.lang.String)>	start = virtualinvoke property.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: void <init>(comp5111.assignment.cut.Subject)>	return	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: void <init>(comp5111.assignment.cut.Subject)>	specialinvoke this.<java.lang.Object: void <init>()>()	0.000000	819
<comp5111.assignment.cut.Subject$TaskHandler: void <init>(comp5111.assignment.cut.Subject)>	this.<comp5111.assignment.cut.Subject$TaskHandler: comp5111.assignment.cut.Subject this$0> = this$0	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] newTextBuffer(int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] string2char(java.lang.String)>	$stack2 = virtualinvoke str.<java.lang.String: char[] toCharArray()>()	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] string2char(java.lang.String)>	return $stack2	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	$stack10 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($stack9, buffer, i)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	$stack5 = lengthof buffer	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	$stack7 = lengthof buffer	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	$stack8 = staticinvoke <java.lang.Character: int codePointAt(char[],int,int)>(buffer, i, limit)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	$stack9 = staticinvoke <java.lang.Character: int toLowerCase(int)>($stack8)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>8")]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	i = i + $stack10	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	i = offset	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	if $stack5 < limit goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	if 0 > offset goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	if buffer == null goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	if i >= limit goto return buffer	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	if offset <= $stack7 goto i = offset	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	return buffer	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toLowerCase(char[],int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	$stack10 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($stack9, buffer, i)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	$stack5 = lengthof buffer	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	$stack7 = lengthof buffer	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	$stack8 = staticinvoke <java.lang.Character: int codePointAt(char[],int,int)>(buffer, i, limit)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	$stack9 = staticinvoke <java.lang.Character: int toUpperCase(int)>($stack8)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>7")]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	i = i + $stack10	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	i = offset	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	if $stack5 < limit goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	if 0 > offset goto return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	if i >= limit goto return buffer	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	if offset <= $stack7 goto i = offset	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	return buffer	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: char[] toUpperCase(char[],int,int)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	$stack23 = virtualinvoke this.<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>(ch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	$stack25 = virtualinvoke this.<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>(ch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	$stack37 = virtualinvoke this.<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>(ch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	$stack39 = virtualinvoke this.<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>(ch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	$stack41 = virtualinvoke this.<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>(ch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	ch = virtualinvoke str.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>5")]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 10 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 12 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 13 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 34 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 39 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 47 goto res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,char)>(res, ch) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 8 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 9 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch != 92 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch <= 127 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch <= 15 goto $stack23 = virtualinvoke this.<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>(ch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch <= 255 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch <= 4095 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if ch >= 32 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if escapeForwardSlash == 0 goto res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if escapeSingleQuote == 0 goto res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\'")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if i >= sz goto return res	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	if str != null goto res = ""	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = ""	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\"")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\'")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001b")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001f")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001n")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001r")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001t")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,char)>(res, ch) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(res, $stack23) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\u000\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(res, $stack25) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\u00\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(res, $stack37) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\u00\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(res, $stack39) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\u0\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(res, $stack41) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\u\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	return res	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean)>	sz = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>	$stack2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(ch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>	$stack3 = <java.util.Locale: java.util.Locale ENGLISH>	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>	$stack4 = virtualinvoke $stack2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($stack3)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String hex(char)>	return $stack4	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	$stack11 = new java.lang.StringBuilder	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	$stack28 = virtualinvoke $stack11.<java.lang.StringBuilder: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	$stack29 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	$stack31 = (char) value	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	ch = virtualinvoke str.<java.lang.String: char charAt(int)>(i)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= i = i + 1]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	goto [?= staticinvoke <comp5111.assignment.Counter: void invocateStmt(java.lang.String)>("<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>9")]	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	hadSlash = 0	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	hadSlash = 0	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	hadSlash = 0	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	hadSlash = 1	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	i = 0	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if $stack28 != 4 goto i = i + 1	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 102 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 110 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 114 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 116 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 117 goto res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,char)>(res, ch) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 34 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 39 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 92 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 92 goto res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,char)>(res, ch) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if ch != 98 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if hadSlash == 0 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if hadSlash == 0 goto return res	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if i >= sz goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if inUnicode == 0 goto (branch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	if str != null goto res = ""	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	inUnicode = 0	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	inUnicode = 0	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	inUnicode = 1	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = ""	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\"")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\'")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\\")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\f")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\n")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\r")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\t")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(res) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0008")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,char)>(res, $stack31) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,char)>(res, ch) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	res = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,char)>(res, ch) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001")	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	return null	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	return res	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>()	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	sz = virtualinvoke str.<java.lang.String: int length()>()	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	value = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($stack29, 16)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(ch)	0.000000	819
<comp5111.assignment.cut.Subject$TextHandler: java.lang.String unescapeJava(java.lang.String)>	virtualinvoke $stack11.<java.lang.StringBuilder: void setLength(int)>(0)	0.000000	819
